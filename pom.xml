<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.github.hiwepy</groupId>
	<artifactId>icepdf-spring-boot-starter</artifactId>
	<description>Spring Boot Starter For icepdf</description>
	<version>1.0.0-SNAPSHOT</version>
	<name>${project.groupId}:${project.artifactId}</name>
	<url>https://github.com/hiwepy/${project.artifactId}</url>
	<packaging>jar</packaging>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https:github.com/hiwepy/${project.artifactId}.git</connection>
		<developerConnection>scm:git:https:github.com/hiwepy/${project.artifactId}.git</developerConnection>
		<url>https:github.com/hiwepy/${project.artifactId}</url>
		<tag>${project.artifactId}</tag>
	</scm>

	<developers>
		<developer>
			<name>wandl</name>
			<email>hnxyhcwdl1003@163.com</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Maven Snapshots Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Maven Central Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<maxmem>512M</maxmem>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>validate</phase>
							<configuration>
								<rules>
									<requireMavenVersion>
										<message>
	                                        <![CDATA[You are running an older version of Maven. This application requires at least Maven ${maven.version}.]]>
										</message>
										<version>[${maven.version}.0,)</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<message>
	                                        <![CDATA[You are running an older version of Java. This application requires at least JDK ${java.version}.]]>
										</message>
										<version>[${java.version}.0,)</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-gpg-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<tagNameFormat>v@{project.version}</tagNameFormat>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<releaseProfiles>release</releaseProfiles>
						<goals>deploy</goals>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<testFailureIgnore>true</testFailureIgnore>
						<attach>true</attach>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- 跳过单元测试 -->
						<skip>true</skip>
						<skipTests>true</skipTests>
						<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest”。 pretest： 
							每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归。 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。 
							always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5。 -->
						<forkMode>once</forkMode>
						<argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m
							-Dfile.encoding=UTF-8</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>${basedir}/target/test-classes</additionalClasspathElement>
						</additionalClasspathElements>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/TestBean.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<skipIfEmpty>true</skipIfEmpty>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
						<argLine>-Dfile.encoding=UTF-8</argLine>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${maven-nexus-staging-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
						<!-- <sslAllowAll>true</sslAllowAll> -->
						<stagingProgressPauseDurationSeconds>60</stagingProgressPauseDurationSeconds>
						<stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
						<detectBuildFailures>true</detectBuildFailures>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!--环境检查插件：代码编译前的环境检查 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- 编译插件：编译主代码至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 资源插件：复制主资源文件至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- 单元测试插件 ：执行测试用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- jar包生成插件 ：创建项目jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- 源码插件:发布时自动将源码同时发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- 安装插件：将项目输出构件安装到本地仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>disable-javadoc-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!--环境检查插件：代码编译前的环境检查 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
					</plugin>
					<!-- 编译插件：编译主代码至主输出目录 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
					<!-- 资源插件：复制主资源文件至主输出目录 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<!-- 单元测试插件 ：执行测试用例 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>
					<!-- jar包生成插件 ：创建项目jar包 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
					</plugin>
					<!-- 源码插件:发布时自动将源码同时发布 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<!-- javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<!-- 安装插件：将项目输出构件安装到本地仓库 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
					</plugin>
					<!-- 签名插件：对构建的jar、javadoc、source使用gpg来签名 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
					<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
					</plugin>
					<!-- 版本自动升级插件 ：重置版本号 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<batik.version>1.12</batik.version>
		<bcprov.version>1.64</bcprov.version>
		<bcpkix.version>${bcprov.version}</bcpkix.version>
		<commons-imaging.version>1.0-alpha1</commons-imaging.version>
		<commons-io.version>2.6</commons-io.version>
		<commons-lang3.version>3.9</commons-lang3.version>
		<cssparser.version>0.9.27</cssparser.version>
		<jsoup.version>1.12.2</jsoup.version>
 		<junit.version>4.12</junit.version>
 		<htmlparser.version>1.4</htmlparser.version>
		<icepdf.version>6.3.2</icepdf.version> <!-- 6.3.2、5.0.4 -->
		<jbig2-imageio.version>3.0.3</jbig2-imageio.version> 
		<imageio.version>3.5</imageio.version>
		<phloc-commons.version>4.6.5</phloc-commons.version>
		<phloc-html.version>4.4.7</phloc-html.version>
		<phloc-css.version>3.8.0</phloc-css.version>
		<phloc-json.version>3.0.3</phloc-json.version>
		<maven.version>3.0</maven.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.vertsion>2.22.1</maven-surefire-plugin.vertsion>
		<maven-nexus-staging-plugin.version>1.6.8</maven-nexus-staging-plugin.version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			
			<!-- Commons-IO contains utility classes, stream implementations, file 
				filters, and endian classes. -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
			<dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-lang3</artifactId>
			    <version>${commons-lang3.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.twelvemonkeys.common/common-image -->
			<!-- The TwelveMonkeys Common Image support  -->
			<dependency>
			    <groupId>com.twelvemonkeys.common</groupId>
			    <artifactId>common-image</artifactId>
			    <version>${imageio.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.pdfbox/jbig2-imageio -->
			<dependency>
			    <groupId>org.apache.pdfbox</groupId>
			    <artifactId>jbig2-imageio</artifactId>
			    <version>${jbig2-imageio.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-core -->
			<!-- TwelveMonkeys :: ImageIO :: Core  -->
			<dependency>
			    <groupId>com.twelvemonkeys.imageio</groupId>
			    <artifactId>imageio-core</artifactId>
			    <version>${imageio.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-metadata -->
			<!-- ImageIO metadata module.  -->
			<dependency>
			    <groupId>com.twelvemonkeys.imageio</groupId>
			    <artifactId>imageio-metadata</artifactId>
			    <version>${imageio.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-tiff -->
			<!-- ImageIO plugin for Aldus/Adobe Tagged Image File Format (TIFF).  -->
			<dependency>
			    <groupId>com.twelvemonkeys.imageio</groupId>
			    <artifactId>imageio-tiff</artifactId>
			    <version>${imageio.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on -->
			<dependency>
			    <groupId>org.bouncycastle</groupId>
			    <artifactId>bcprov-jdk15on</artifactId>
			    <version>${bcprov.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-ext-jdk15on -->
			<dependency>
			    <groupId>org.bouncycastle</groupId>
			    <artifactId>bcprov-ext-jdk15on</artifactId>
			    <version>${bcprov.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on -->
			<dependency>
			    <groupId>org.bouncycastle</groupId>
			    <artifactId>bcpkix-jdk15on</artifactId>
			    <version>${bcpkix.version}</version>
			</dependency>
									
						
			<!-- ######################org.apache.xmlgraphics ###################### -->
			
			<!-- Batik是使用svg格式图片来实现各种功能的应用程序以及Applet提供的一个基于java的工具包。 -->
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-transcoder</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-util</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-ext</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-awt-util</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-svggen</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-dom</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-svg-dom</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-css</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-bridge</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-gvt</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-xml</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-codec</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-parser</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-anim</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-script</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-rasterizer</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-swing</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-gui-util</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-js</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-extension</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-ttf2svg</artifactId>
				<version>${batik.version}</version>
			</dependency>
			
			<!-- ###################### 词法分析、HTML、CSS 解析工具包###################### -->
			
			<!--
				jsoup 是一款Java的HTML解析器，可直接解析某个URL地址、HTML文本内容。
				它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。
			-->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			<!-- css 解析工具包 -->
			<dependency>
				<groupId>net.sourceforge.cssparser</groupId>
				<artifactId>cssparser</artifactId>
				<version>${cssparser.version}</version>
			</dependency>
			<dependency>
				<groupId>nu.validator.htmlparser</groupId>
				<artifactId>htmlparser</artifactId>
				<version>${htmlparser.version}</version>
			</dependency>
			<!-- html的css解析  http://central.maven.org/maven2/com/phloc/ -->
			<dependency>
				<groupId>com.phloc</groupId>
				<artifactId>phloc-commons</artifactId>
				<version>${phloc-commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.phloc</groupId>
				<artifactId>phloc-html</artifactId>
				<version>${phloc-html.version}</version>
			</dependency>
			<dependency>
				<groupId>com.phloc</groupId>
				<artifactId>phloc-json</artifactId>
				<version>${phloc-json.version}</version>
			</dependency>
			<dependency>
				<groupId>com.phloc</groupId>
				<artifactId>phloc-css</artifactId>
				<version>${phloc-css.version}</version>
			</dependency>
						
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Java Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Core starter, including auto-configuration support, logging and YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Boot Test 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- @ConfigurationProperties annotation processing (metadata for IDEs) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Compile dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		
		<!-- Commons-IO contains utility classes, stream implementations, file 
			filters, and endian classes. -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>
		
		<!-- The TwelveMonkeys Common Image support  -->
		<dependency>
		    <groupId>com.twelvemonkeys.common</groupId>
		    <artifactId>common-image</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.pdfbox</groupId>
		    <artifactId>jbig2-imageio</artifactId>
		</dependency>
		<!-- TwelveMonkeys :: ImageIO :: Core  -->
		<dependency>
		    <groupId>com.twelvemonkeys.imageio</groupId>
		    <artifactId>imageio-core</artifactId>
		</dependency>
		<!-- ImageIO metadata module.  -->
		<dependency>
		    <groupId>com.twelvemonkeys.imageio</groupId>
		    <artifactId>imageio-metadata</artifactId>
		</dependency>
		<!-- ImageIO plugin for Aldus/Adobe Tagged Image File Format (TIFF).  -->
		<dependency>
		    <groupId>com.twelvemonkeys.imageio</groupId>
		    <artifactId>imageio-tiff</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcprov-jdk15on</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcprov-ext-jdk15on</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.bouncycastle</groupId>
		    <artifactId>bcpkix-jdk15on</artifactId>
		</dependency>
					
		<!-- icepdf 6.3.2 -->
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-core</artifactId>
			<version>${icepdf.version}</version>
			<!-- <scope>system</scope>
			<systemPath>${basedir}/libs/6.3.2/icepdf-core-6.3.2.jar</systemPath> -->
		</dependency>	
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-viewer</artifactId>
			<version>${icepdf.version}</version>
			<!-- <scope>system</scope>
			<systemPath>${basedir}/libs/6.3.2/icepdf-viewer-6.3.2.jar</systemPath> -->
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-pro</artifactId>
			<version>${icepdf.version}</version>
			<!-- <scope>system</scope>
			<systemPath>${basedir}/libs/6.3.2/icepdf-pro-6.3.2.jar</systemPath> -->
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-pro-intl</artifactId>
			<version>${icepdf.version}</version>
			<!-- <scope>system</scope>
			<systemPath>${basedir}/libs/6.3.2/icepdf-pro-intl-6.3.2.jar</systemPath> -->
		</dependency> 
		
		<!-- icepdf 5.0.4 -->
		<!-- <dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-core</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/icepdf-core.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-extra</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/icepdf-extra.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-pro-intl</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/icepdf-pro-intl.jar</systemPath>
		</dependency> 
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-pro</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/icepdf-pro.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>icepdf-viewer</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/icepdf-viewer.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.icepdf.pdf</groupId>
			<artifactId>levigo-jbig2-imageio</artifactId>
			<version>${icepdf.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/libs/5.0.4/levigo-jbig2-imageio.jar</systemPath>
		</dependency> -->

	</dependencies>

</project>